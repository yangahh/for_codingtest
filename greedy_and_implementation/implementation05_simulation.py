# 문제) 게임 개발
# 캐릭터가 있는 장소는 1 * 1 크기의 정사각형으로 이뤄진 N * M 크기의 직사각형. 각각의 칸은 육지 또는 바다. 캐릭터는 동서남북 중 한 곳을 바라본다
# 맵의 각 칸은 (A, B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수, B는 서쪽으로부터 떨어진 칸의 개수이다.
# 캐릭터는 상하좌우로 움직을 수 있고, 바다로 되어 있는 공간에는 갈 수 없다.
# [움직임 매뉴얼]
# 1. 현재 위치에서 현재 방향을 기준으로 왼쪽 방향(반시계 방향으로 90도 회전한 방향)부터 차례대로 갈 곳을 정한다.
# 2. 캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 칸이 존재한다면, 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다. 왼쪽방향에 가보지 않은 칸이 없다면, 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.
# 3. 만약 네 방향 모두 이미 가본 칸이거나 바다로 되어 있는 칸인 경우에는, 바라보는 방향을 유지한 채로 한 칸 뒤로 가고 1단계로 돌아간다. 단, 이때 뒤쪽 방향이 바다인 카니아 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.
# 위 과정을 반복적으로 수행. 매뉴얼에 따라 캐릭터를 이동시킨 뒤에, 캐릭터가 방문한 칸의 수를 출력하는 프로그램을 작성.
# [입력 조건]
# - 첫째 줄에 맵의 세로 크기 N과 가로 크기 M을 공백으로 구분하여 입력
# - 둘째 줄에 캐릭터가 있는 칸의 좌표 (A, B)와 바라보는 방향 d(0:북쪽, 1:동쪽, 2:남쪽, 3:서쪽)가 각각 서로 공백으로 구분하여 주어짐
# - 셋째 줄부터 맵이 육지인지 바다인지 입력. 0:육지, 1:바다
# - 처음에 캐릭터가 위치판 칸의 상태는 항상 육지


n, m = map(int, input().split())
x, y, d = map(int, input().split())

map = [list(map(int, input().split())) for _ in range(n)]

# 북 동 남 서
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

# 왼쪽 방향으로 몸만 돌리는 메소드
def turn_left():
    global d
    d -= 1
    if d == -1 :
        d = 3

cnt = 1
turn_time = 0

## 반복 구간
while True:
    # 거처간 위치는 2로 바꾸기
    map[x][y] = 2
    # 왼쪽으로 돈다
    turn_left()
    # 다음에 갈 위치 설정
    nx = x + dx[d]
    ny = y + dy[d]

    # 다음에 갈 위치가 육지인지 확인
    if map[nx][ny] == 0:
        x = nx
        y = ny
        cnt += 1
        turn_time = 0
        continue
    else: # 바다이거나 가봤던 곳(2)일 때 >> 왼쪽 방향으로 회전만(회전은 위에서 이미 했음)
        turn_time += 1

    # 4바퀴를 다 돌았는데 갈 곳이 없을 때 뒤로 이동
    if turn_time == 4:
        # 뒤로 갈 위치 설정
        nx = x - dx[d]
        ny = y - dy[d]
        if map[nx][ny] == 0: # 뒤가 육지이면서 가봤던 곳이 아닌 경우
            x = nx
            y = ny
            cnt += 1
        else: # 가봤던 곳(=2)이 아닐 경우
            break
        turn_time = 0


print(cnt)



