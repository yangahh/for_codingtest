# 문제) 상하좌우 (시뮬레이션 유형)
# 여행가 A는 N * N 크기의 정사각형 공간 위에 서 있다. 이 공간은 1 * 1 크기의 정사각형으로 나누어져 있다.
# 가장 왼쪽 위 좌표는 (1, 1)이며, 가장 오른쪽 아래 좌표는 (N, N) 이다.
# A는 상, 하, 좌, 우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1, 1)이다.
# L : 왼쪽으로 한 칸 이동
# R : 오른쪽으로 한 칸 이동
# U : 위로 한 칸 이동
# D : 아래로 한 칸 이동
# 이때 A가 N * N 크기의 정사각형 공간을 벗어나는 움직임은 무시된다. 예를들어 (1, 1)의 위치에서 L혹은 U를 만나면 무시된다.
# 계획서가 주어졌을 때 A가 최종적으로 도착할 지점의 좌표를 출력하는 프로그램을 작성하시오

n = int(input())
plans = input().split()

# L R U D
d_type = ['L', 'R', 'U', 'D']
dx = [0, 0, -1, 1]
dy = [-1, 1, 0, 0] 

# 현재 위치
x, y = 1, 1
# nx, ny = 0, 0

for plan in plans:
    for i in range(len(d_type)):
        if plan == d_type[i]:
            nx = x + dx[i]
            ny = y + dy[i]
    # 공간을 벗어나지 않는 경우만 이동 수행
    if 1 <= nx <= n and 1 <= ny <= n:
        x = nx
        y = ny

    '''
    #공간을 벗어나는 경우 무시
    if nx < 1 or ny < 1 or nx > n or ny > n:
        continue  # continue는 조건에 해당할 시 이 코드의 아래있는 코드들은 수행하지 않고 반복문 처음으로 돌아감
    # 위 경우에 해당하지 않으면 이동 수행
    x, y = nx, ny
    '''


print(x, y)
